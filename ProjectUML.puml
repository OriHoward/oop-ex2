@startuml
'https://plantuml.com/class-diagram

interface DirectedWeightedGraph{
    + NodeData getNode(int key);
    + EdgeData getEdge(int src, int dest);
    + void addNode(NodeData n);
    + void connect(int src, int dest, double w);
    + Iterator<NodeData> nodeIter();
    + Iterator<EdgeData> edgeIter();
    + Iterator<EdgeData> edgeIter(int node_id);
    + NodeData removeNode(int key);
    + EdgeData removeEdge(int src, int dest);
    + int nodeSize();
    + int edgeSize();
    + int getMC();
}

class DecoratedGraphIterator implements Iterator{
    - DirectedGraph graph
    - int currIndex
    - int MCount
    - Iterator<T> graphIter

    + DecoratedGraphIterator(Iterator<T> graphIter, DirectedGraph graph)
    + boolean hasNext()
    + T next()
    + void remove()
    + void forEachRemaining(Consumer<? super T> action)
}

class DirectedGraph implements DirectedWeightedGraph, Serializable {

    - int MCount
    - HashMap<Integer, NodeData> nodeMap
    - List<EdgeData> parsedEdges

    + void setParsedEdges(List<EdgeData> parsedEdges)
    + HashMap<Integer, NodeData> getNodeMap()
    + void hasChanged(int givenMCount)
    + boolean loadGraph(String filename)
    + void initiateEdgeMaps()

}

class DirectedGraphAlgorithms implements DirectedWeightedGraphAlgorithms {

}

class GraphEdge implements EdgeData, Serializable {

}

class GraphNode implements NodeData, Serializable {

}

class NodeLocation implements GeoLocation, Serializable {

}

class PosSerializer implements JsonSerializer {
}

enum NodeTagEnum {
WHITE
GRAY
BLACK
}


@enduml